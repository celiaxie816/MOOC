str(profiles)
install.packages("okcupiddata")
for i in range(100):
if i%3 == 0:
print(i)
#＃第一步：加载时间序列程序包
library(tseries)
library(forecast)
#使用该包自带的程序，是指航空乘客的分布
air <- AirPassengers
#作这个时间序列的图,通过图作一个直观判断
plot(air)
##观察数据
#也可以直接使用tsdisplay来观察，它包含了时序图，以及acf、pacf两个相关图
tsdisplay(air)
#可以拆掉最后一年来做样本的训练集，再将最后一年做样本的测试集
sair<-ts(as.vector(air[1:132]),frequency=12,start=c(1949,1))
#同样可以看一下拆掉之后的训练集图形
tsdisplay(sair)
##第三步：数据处理, 去除数据趋势和季节性
#sair的明显存在一个向上的趋势，用差分方法干掉，先看滞后1次的图形
s1<-diff(sair,1)
#从图上看，基本围绕了0在振动，基本平稳，进一步使用adf检验，看一下是否存在单位根（验证平稳性，若存在则不平稳）
adf.test(s1)
#单位根检验通过（p<0.05,显著拒绝存在单位根），再看一下差分之后的图形。
tsdisplay(s1)
#图形显示acf图存在拖尾，q=0，pacf图超出虚线较多，但从整体上看，从16阶之后截断，而上面的线可以大概看到（1，8，10，12，16）这五个数超出虚线甚多，所以，可以每个都测试一下。形成(1,1,0)(8,1,0),10,1,0),(12,1,0),(16,1,0),然后判断一下各自的AIC值，取最小值即可。
#且acf图存在一个12阶的季节性影响因素，然后通过作滞后12阶的图看一下是否消除
tsdisplay(diff(s1))
tsdisplay(diff(s1,12))
arima(sair,order=c(1,1,0),seasonal=list(order=c(1,1,1),period=12))
：自动选取最佳（p,d,q)组合
#或使用auto.arima函数来自动确定这些参数：
auto.arima(sair)
#Series: sair
#ARIMA(0,1,1)(0,1,0)[12]
#Coefficients:
# ma1
# -0.2263
#s.e. 0.0900
#sigma^2 estimated as 110.5: log likelihood=-448.34 AIC=900.69 AICc=900.79 BIC=906.24
#auto.arima给出的建议是(0,1,1)(0,1,0)[12]，其AIC是900.69，相差不大，可以使用两个方案都看一下预测的结果。
#先进行拟合
fit1<-arima(sair,order=c(1,1,0),seasonal=list(order=c(1,1,1),period=12))
fit2<-arima(sair,order=c(0,1,1),seasonal=list(order=c(0,1,0),period=12))
tsdiag(fit1)
tsdiag(fit2)
tsdiag(fit1)
tsdiag(fit1)
tsdiag(fit2)
tsdiag(fit1)
f.p1<-forecast(fit1,h=12,level=c(99.5))
f.p2<-forecast(fit2,h=12,level=c(99.5))
plot(f.p1,ylim=c(100,700))
lines(f.p1$fitted,col="green")
lines(air,col="red")
plot(f.p2,ylim=c(100,700))
lines(f.p2$fitted,col="green")
lines(air,col="red")
tsdisplay(diff(s1))
tsdisplay(diff(s1,12))
library(prophet)
install.packages('prophet')
install.packages("installr")
library(randomForest)
setwd("~/Desktop/analytics edge/Data")
tweets = read.csv("tweets.csv", stringsAsFactors = FALSE)
library(tm)
library(SnowballC)
library("wordcloud")
library("RColorBrewer")
corpus = Corpus(VectorSource(tweets$Tweet))
corpus = tm_map(corpus, tolower)
corpus = tm_map(corpus, removePunctuation)
stopwords('english')[1:10]
corpus = tm_map(corpus, removeWords, stopwords("english"))
frequencies = DocumentTermMatrix(corpus)
allTweets = as.data.frame(as.matrix(frequencies))
ncol(allTweets)# # of words depends on # of variables
wordcloud(colnames(allTweets), colSums(allTweets), scale = c(2, 0.25))
corpus = tm_map(corpus, removeWords, c("apple", stopwords("english")))
frequencies = DocumentTermMatrix(corpus)
allTweets = as.data.frame(as.matrix(frequencies))
str(tweets)
tweetsNeg = subset(allTweets, tweets$Avg <= -1)
wordcloud(colnames(allTweets), colSums(allTweets), scale = c(2, 0.25), colors = brewer.pal(9, "Blues")[c(-1,-2,-3,-4)])
wordcloud(colnames(allTweets), colSums(allTweets), scale = c(2, 0.25), colors = brewer.pal(9, "Blues")[c(5,6,7,8,9)])
wordcloud(colnames(allTweets), colSums(allTweets), scale = c(2, 0.25), colors = brewer.pal(9, "Blues")[c(-1,-2,-3,-4)])
wordcloud(colnames(allTweets), colSums(allTweets), scale = c(2, 0.25), colors = brewer.pal(9, "Blues")[c(5,6,7,8,9)])
parole = read.csv("parole.csv")
str(parole)
parole$male = as.factor(parole$male)
parole$male = as.factor(parole$male)
parole$state = as.factor(parole$state)
parole$crime = as.factor(parole$crime)
table(parole$male)
130 / (130+545)
table(parole$male, parole$violator)
481 / (481+64)
14 / (14+64)
ken = subset(parole, state = "Kentucky")
table(ken$crime)
table(parole$state, parole$crime)
str(ken)
str(parole)
ken = subset(parole, state == 2)
table(parole$state, parole$crime)
table(ken$crime)
ken = subset(parole, state == 2)
str(ken)
table(ken$crime, ken$state)
library(ggplot2)
ggplot(data=parole, aes(x=age) + geom_histogram(binwidth=5, boundary=0, color="black", fill="comflowerblue")
ggplot(data=parole, aes(x=age)) + geom_histogram(binwidth=5, boundary=0, color="black", fill="comflowerblue")
ggplot(data=parole, aes(x=age)) + geom_histogram(binwidth=5, boundary=0, color="black", fill="cornflowerblue")
ggplot(data=parole, aes(x=age)) + geom_histogram(binwidth=5, boundary=0, color="blue", fill="cornflowerblue")
ggplot(data=parole, aes(x=age)) + geom_histogram(binwidth=5, boundary=0) + facet_grid(male~.)
ggplot(data=parole, aes(x=age)) + geom_histogram(binwidth=5, boundary=0) + facet_grid(.~male)
ggplot(data = parole, aes(x=age, fill=male)) + geom_histogram(binwidth=5, boundary=0)
colorPalette = c("#000000", "#E69F00", "56B4E9", "009E73", "#F0E442", "#0072B2", "D55E00", "#CC79A7")
ggplot(data=parole, aes(x=age, fill = male)) + geom_histogram(binwidth=5, boundary=0) + scale_fill_manual(values=colorPalette)
ggplot(data=parole, aes(x=age, fill = male)) + geom_histogram(binwidth=5, boundary=0, position="identity") + scale_fill_manual(values=colorPalette)
ggplot(data=parole, aes(x=age, fill = male)) + geom_histogram(binwidth=5, boundary=0, position="identity", alpha=0.5) + scale_fill_manual(values=colorPalette)
ggplot(data=parole, aes(x=time.served)) + geom_histogram(binwidth=5, boundary=0, color="blue", fill="cornflowerblue")#Q2
ggplot(data=parole, aes(x=time.served)) + geom_histogram(binwidth=12, boundary=0, color="blue", fill="cornflowerblue")#Q2
ggplot(data=parole, aes(x=time.served)) + geom_histogram(binwidth=12, boundary=1, color="blue", fill="cornflowerblue")#Q2
ggplot(data=parole, aes(x=time.served)) + geom_histogram(binwidth=5, boundary=1, color="blue", fill="cornflowerblue")#Q2
ggplot(data=parole, aes(x=time.served)) + geom_histogram(binwidth=1, boundary=1, color="blue", fill="cornflowerblue")#Q2
ggplot(data=parole, aes(x=time.served)) #+ geom_histogram(binwidth=, boundary=0, color="blue", fill="cornflowerblue")#Q2
ggplot(data=parole, aes(x=time.served)) + geom_histogram(binwidth=one_month, boundary=0, color="blue", fill="cornflowerblue")#Q2
ggplot(data=parole, aes(x=time.served)) + geom_histogram(binwidth=1, boundary=0, color="blue", fill="cornflowerblue")#Q2
ggplot(data=parole, aes(x=time.served)) + geom_histogram(binwidth=01, boundary=0, color="blue", fill="cornflowerblue")#Q2
ggplot(data=parole, aes(x=time.served)) + geom_histogram(binwidth=0.1, boundary=0, color="blue", fill="cornflowerblue")#Q2
ggplot(data=parole, aes(x=time.served)) + geom_histogram(binwidth=1, boundary=0, color="blue", fill="cornflowerblue") +  facet_grid(crime~.)#Q4
ggplot(data=parole, aes(x=time.served)) + geom_histogram(binwidth=1, boundary=0, color="blue", fill="cornflowerblue") +  facet_grid(.~crime)#Q4
ggplot(data=parole, aes(x=age, fill = time_served)) + geom_histogram(binwidth=1, boundary=0, position="identity", alpha=0.5) + scale_fill_manual(values=colorPalette)
ggplot(data=parole, aes(x=age, fill = crime)) + geom_histogram(binwidth=1, boundary=0, position="identity", alpha=0.5) + scale_fill_manual(values=colorPalette)
ggplot(data=parole, aes(x=time.served, fill = crime)) + geom_histogram(binwidth=1, boundary=0, position="identity", alpha=0.5) + scale_fill_manual(values=colorPalette)
ggplot(data=parole, aes(x=time.served, fill = crime)) + geom_histogram(binwidth=1, boundary=0, position="identity", alpha=0.3) + scale_fill_manual(values=colorPalette)
remote::install_github("GuangchuangYu/nCov2019")
install.packages("remote")
library(remote)
library(nCov2019)
remote::install_github("GuangchuangYu/nCov2019")
remote::install_github("GuangchuangYu/nCov2019")
remote::install_github("GuangchuangYu/nCov2019")
remote::install_github("GuangchuangYu/nCov2019")
library(devtools)
library(usethis)
library(devtools)
install_github("rich-iannone/DiagrammeR")
remote::install_github("GuangchuangYu/nCov2019")
install_github("GuangchuangYu/nCov2019")
library(nCov2019)
x <- get_nCov2019()
str(x)
x
time(x)
x[]
k = x[]
x[1,] #Hubei data
x[] #national data
x[1,] #Hubei data
library(forcats)
library(ggplot2)
d$confirm = as.numeric(d$confirm)
d = x['广东',]
d$confirm = as.numeric(d$confirm)
d$name = fct_reorder(d$name, d$confirm)
ggplot(d, aes(name, confirm)) + geom_col(fill='steelblue') + coord_flip()+
geom_text(aes(y=confirm+2, label=confirm), hjust=0) +
theme_minimal(base_size=14) + scale_y_continuous(expand=c(0,10)) +
xlab(NULL) + ylab(NULL)
d$confirm = as.numeric(d$confirm)
d$name = fct_reorder(d$name, d$confirm)
ggplot(d, aes(name, confirm)) + geom_col(fill='steelblue') + coord_flip()+
geom_text(aes(y=confirm+2, label=confirm), hjust=0) +
theme_minimal(base_size=14) + scale_y_continuous(expand=c(0,10)) +
xlab(NULL) + ylab(NULL)
par(family='STKaiti')
d$confirm = as.numeric(d$confirm)
d$name = fct_reorder(d$name, d$confirm)
ggplot(d, aes(name, confirm)) + geom_col(fill='steelblue') + coord_flip()+
geom_text(aes(y=confirm+2, label=confirm), hjust=0) +
theme_minimal(base_size=14) + scale_y_continuous(expand=c(0,10)) +
xlab(NULL) + ylab(NULL)
library(showtext)
install.packages("showtext")
library(showtext)
d$confirm = as.numeric(d$confirm)
d$name = fct_reorder(d$name, d$confirm)
ggplot(d, aes(name, confirm)) + geom_col(fill='steelblue') + coord_flip()+
geom_text(aes(y=confirm+2, label=confirm), hjust=0) +
theme_minimal(base_size=14) + scale_y_continuous(expand=c(0,10)) +
xlab(NULL) + ylab(NULL)
showtext_auto(enable = TRUE)
showtext_auto(enable = TRUE)
d$confirm = as.numeric(d$confirm)
d$name = fct_reorder(d$name, d$confirm)
ggplot(d, aes(name, confirm)) + geom_col(fill='steelblue') + coord_flip()+
geom_text(aes(y=confirm+2, label=confirm), hjust=0) +
theme_minimal(base_size=14) + scale_y_continuous(expand=c(0,10)) +
xlab(NULL) + ylab(NULL)
par(family='STKaiti')
d$confirm = as.numeric(d$confirm)
d$name = fct_reorder(d$name, d$confirm)
ggplot(d, aes(name, confirm)) + geom_col(fill='steelblue') + coord_flip()+
geom_text(aes(y=confirm+2, label=confirm), hjust=0) +
theme_minimal(base_size=14) + scale_y_continuous(expand=c(0,10)) +
xlab(NULL) + ylab(NULL)
ggplot(d, aes(name, confirm)) + geom_col(fill='steelblue') + coord_flip()+
geom_text(aes(y=confirm+2, label=confirm, family = 'STXihei'), hjust=0) +
theme_minimal(base_size=14) + scale_y_continuous(expand=c(0,10)) +
xlab(NULL) + ylab(NULL)
ggplot(d, aes(name, confirm)) + geom_col(fill='steelblue') + coord_flip()+
geom_text(aes(y=confirm+2, label=confirm, family = 'Ubuntu'), hjust=0) +
theme_minimal(base_size=14) + scale_y_continuous(expand=c(0,10)) +
xlab(NULL) + ylab(NULL)
ggplot(d, aes(name, confirm)) + geom_col(fill='steelblue') + coord_flip()+
geom_text(aes(y=confirm+2, label=confirm, family = 'STXihei'), hjust=0) +
theme_minimal(base_size=14) + scale_y_continuous(expand=c(0,10)) +
xlab(NULL) + ylab(NULL)
